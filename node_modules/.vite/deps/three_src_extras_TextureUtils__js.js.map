{
  "version": 3,
  "sources": ["../../three/src/constants.js", "../../three/src/extras/TextureUtils.js"],
  "sourcesContent": ["export const REVISION = '169';\r\n\r\nexport const MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 };\r\nexport const TOUCH = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 };\r\nexport const CullFaceNone = 0;\r\nexport const CullFaceBack = 1;\r\nexport const CullFaceFront = 2;\r\nexport const CullFaceFrontBack = 3;\r\nexport const BasicShadowMap = 0;\r\nexport const PCFShadowMap = 1;\r\nexport const PCFSoftShadowMap = 2;\r\nexport const VSMShadowMap = 3;\r\nexport const FrontSide = 0;\r\nexport const BackSide = 1;\r\nexport const DoubleSide = 2;\r\nexport const NoBlending = 0;\r\nexport const NormalBlending = 1;\r\nexport const AdditiveBlending = 2;\r\nexport const SubtractiveBlending = 3;\r\nexport const MultiplyBlending = 4;\r\nexport const CustomBlending = 5;\r\nexport const AddEquation = 100;\r\nexport const SubtractEquation = 101;\r\nexport const ReverseSubtractEquation = 102;\r\nexport const MinEquation = 103;\r\nexport const MaxEquation = 104;\r\nexport const ZeroFactor = 200;\r\nexport const OneFactor = 201;\r\nexport const SrcColorFactor = 202;\r\nexport const OneMinusSrcColorFactor = 203;\r\nexport const SrcAlphaFactor = 204;\r\nexport const OneMinusSrcAlphaFactor = 205;\r\nexport const DstAlphaFactor = 206;\r\nexport const OneMinusDstAlphaFactor = 207;\r\nexport const DstColorFactor = 208;\r\nexport const OneMinusDstColorFactor = 209;\r\nexport const SrcAlphaSaturateFactor = 210;\r\nexport const ConstantColorFactor = 211;\r\nexport const OneMinusConstantColorFactor = 212;\r\nexport const ConstantAlphaFactor = 213;\r\nexport const OneMinusConstantAlphaFactor = 214;\r\nexport const NeverDepth = 0;\r\nexport const AlwaysDepth = 1;\r\nexport const LessDepth = 2;\r\nexport const LessEqualDepth = 3;\r\nexport const EqualDepth = 4;\r\nexport const GreaterEqualDepth = 5;\r\nexport const GreaterDepth = 6;\r\nexport const NotEqualDepth = 7;\r\nexport const MultiplyOperation = 0;\r\nexport const MixOperation = 1;\r\nexport const AddOperation = 2;\r\nexport const NoToneMapping = 0;\r\nexport const LinearToneMapping = 1;\r\nexport const ReinhardToneMapping = 2;\r\nexport const CineonToneMapping = 3;\r\nexport const ACESFilmicToneMapping = 4;\r\nexport const CustomToneMapping = 5;\r\nexport const AgXToneMapping = 6;\r\nexport const NeutralToneMapping = 7;\r\nexport const AttachedBindMode = 'attached';\r\nexport const DetachedBindMode = 'detached';\r\n\r\nexport const UVMapping = 300;\r\nexport const CubeReflectionMapping = 301;\r\nexport const CubeRefractionMapping = 302;\r\nexport const EquirectangularReflectionMapping = 303;\r\nexport const EquirectangularRefractionMapping = 304;\r\nexport const CubeUVReflectionMapping = 306;\r\nexport const RepeatWrapping = 1000;\r\nexport const ClampToEdgeWrapping = 1001;\r\nexport const MirroredRepeatWrapping = 1002;\r\nexport const NearestFilter = 1003;\r\nexport const NearestMipmapNearestFilter = 1004;\r\nexport const NearestMipMapNearestFilter = 1004;\r\nexport const NearestMipmapLinearFilter = 1005;\r\nexport const NearestMipMapLinearFilter = 1005;\r\nexport const LinearFilter = 1006;\r\nexport const LinearMipmapNearestFilter = 1007;\r\nexport const LinearMipMapNearestFilter = 1007;\r\nexport const LinearMipmapLinearFilter = 1008;\r\nexport const LinearMipMapLinearFilter = 1008;\r\nexport const UnsignedByteType = 1009;\r\nexport const ByteType = 1010;\r\nexport const ShortType = 1011;\r\nexport const UnsignedShortType = 1012;\r\nexport const IntType = 1013;\r\nexport const UnsignedIntType = 1014;\r\nexport const FloatType = 1015;\r\nexport const HalfFloatType = 1016;\r\nexport const UnsignedShort4444Type = 1017;\r\nexport const UnsignedShort5551Type = 1018;\r\nexport const UnsignedInt248Type = 1020;\r\nexport const UnsignedInt5999Type = 35902;\r\nexport const AlphaFormat = 1021;\r\nexport const RGBFormat = 1022;\r\nexport const RGBAFormat = 1023;\r\nexport const LuminanceFormat = 1024;\r\nexport const LuminanceAlphaFormat = 1025;\r\nexport const DepthFormat = 1026;\r\nexport const DepthStencilFormat = 1027;\r\nexport const RedFormat = 1028;\r\nexport const RedIntegerFormat = 1029;\r\nexport const RGFormat = 1030;\r\nexport const RGIntegerFormat = 1031;\r\nexport const RGBIntegerFormat = 1032;\r\nexport const RGBAIntegerFormat = 1033;\r\n\r\nexport const RGB_S3TC_DXT1_Format = 33776;\r\nexport const RGBA_S3TC_DXT1_Format = 33777;\r\nexport const RGBA_S3TC_DXT3_Format = 33778;\r\nexport const RGBA_S3TC_DXT5_Format = 33779;\r\nexport const RGB_PVRTC_4BPPV1_Format = 35840;\r\nexport const RGB_PVRTC_2BPPV1_Format = 35841;\r\nexport const RGBA_PVRTC_4BPPV1_Format = 35842;\r\nexport const RGBA_PVRTC_2BPPV1_Format = 35843;\r\nexport const RGB_ETC1_Format = 36196;\r\nexport const RGB_ETC2_Format = 37492;\r\nexport const RGBA_ETC2_EAC_Format = 37496;\r\nexport const RGBA_ASTC_4x4_Format = 37808;\r\nexport const RGBA_ASTC_5x4_Format = 37809;\r\nexport const RGBA_ASTC_5x5_Format = 37810;\r\nexport const RGBA_ASTC_6x5_Format = 37811;\r\nexport const RGBA_ASTC_6x6_Format = 37812;\r\nexport const RGBA_ASTC_8x5_Format = 37813;\r\nexport const RGBA_ASTC_8x6_Format = 37814;\r\nexport const RGBA_ASTC_8x8_Format = 37815;\r\nexport const RGBA_ASTC_10x5_Format = 37816;\r\nexport const RGBA_ASTC_10x6_Format = 37817;\r\nexport const RGBA_ASTC_10x8_Format = 37818;\r\nexport const RGBA_ASTC_10x10_Format = 37819;\r\nexport const RGBA_ASTC_12x10_Format = 37820;\r\nexport const RGBA_ASTC_12x12_Format = 37821;\r\nexport const RGBA_BPTC_Format = 36492;\r\nexport const RGB_BPTC_SIGNED_Format = 36494;\r\nexport const RGB_BPTC_UNSIGNED_Format = 36495;\r\nexport const RED_RGTC1_Format = 36283;\r\nexport const SIGNED_RED_RGTC1_Format = 36284;\r\nexport const RED_GREEN_RGTC2_Format = 36285;\r\nexport const SIGNED_RED_GREEN_RGTC2_Format = 36286;\r\nexport const LoopOnce = 2200;\r\nexport const LoopRepeat = 2201;\r\nexport const LoopPingPong = 2202;\r\nexport const InterpolateDiscrete = 2300;\r\nexport const InterpolateLinear = 2301;\r\nexport const InterpolateSmooth = 2302;\r\nexport const ZeroCurvatureEnding = 2400;\r\nexport const ZeroSlopeEnding = 2401;\r\nexport const WrapAroundEnding = 2402;\r\nexport const NormalAnimationBlendMode = 2500;\r\nexport const AdditiveAnimationBlendMode = 2501;\r\nexport const TrianglesDrawMode = 0;\r\nexport const TriangleStripDrawMode = 1;\r\nexport const TriangleFanDrawMode = 2;\r\nexport const BasicDepthPacking = 3200;\r\nexport const RGBADepthPacking = 3201;\r\nexport const RGBDepthPacking = 3202;\r\nexport const RGDepthPacking = 3203;\r\nexport const TangentSpaceNormalMap = 0;\r\nexport const ObjectSpaceNormalMap = 1;\r\n\r\n// Color space string identifiers, matching CSS Color Module Level 4 and WebGPU names where available.\r\nexport const NoColorSpace = '';\r\nexport const SRGBColorSpace = 'srgb';\r\nexport const LinearSRGBColorSpace = 'srgb-linear';\r\nexport const DisplayP3ColorSpace = 'display-p3';\r\nexport const LinearDisplayP3ColorSpace = 'display-p3-linear';\r\n\r\nexport const LinearTransfer = 'linear';\r\nexport const SRGBTransfer = 'srgb';\r\n\r\nexport const Rec709Primaries = 'rec709';\r\nexport const P3Primaries = 'p3';\r\n\r\nexport const ZeroStencilOp = 0;\r\nexport const KeepStencilOp = 7680;\r\nexport const ReplaceStencilOp = 7681;\r\nexport const IncrementStencilOp = 7682;\r\nexport const DecrementStencilOp = 7683;\r\nexport const IncrementWrapStencilOp = 34055;\r\nexport const DecrementWrapStencilOp = 34056;\r\nexport const InvertStencilOp = 5386;\r\n\r\nexport const NeverStencilFunc = 512;\r\nexport const LessStencilFunc = 513;\r\nexport const EqualStencilFunc = 514;\r\nexport const LessEqualStencilFunc = 515;\r\nexport const GreaterStencilFunc = 516;\r\nexport const NotEqualStencilFunc = 517;\r\nexport const GreaterEqualStencilFunc = 518;\r\nexport const AlwaysStencilFunc = 519;\r\n\r\nexport const NeverCompare = 512;\r\nexport const LessCompare = 513;\r\nexport const EqualCompare = 514;\r\nexport const LessEqualCompare = 515;\r\nexport const GreaterCompare = 516;\r\nexport const NotEqualCompare = 517;\r\nexport const GreaterEqualCompare = 518;\r\nexport const AlwaysCompare = 519;\r\n\r\nexport const StaticDrawUsage = 35044;\r\nexport const DynamicDrawUsage = 35048;\r\nexport const StreamDrawUsage = 35040;\r\nexport const StaticReadUsage = 35045;\r\nexport const DynamicReadUsage = 35049;\r\nexport const StreamReadUsage = 35041;\r\nexport const StaticCopyUsage = 35046;\r\nexport const DynamicCopyUsage = 35050;\r\nexport const StreamCopyUsage = 35042;\r\n\r\nexport const GLSL1 = '100';\r\nexport const GLSL3 = '300 es';\r\n\r\nexport const WebGLCoordinateSystem = 2000;\r\nexport const WebGPUCoordinateSystem = 2001;\r\n", "import { AlphaFormat, LuminanceFormat, LuminanceAlphaFormat, RedFormat, RedIntegerFormat, RGFormat, RGIntegerFormat, RGBFormat, RGBAFormat, RGBAIntegerFormat, RGB_S3TC_DXT1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGB_PVRTC_2BPPV1_Format, RGBA_PVRTC_2BPPV1_Format, RGB_PVRTC_4BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGB_ETC1_Format, RGB_ETC2_Format, RGBA_ETC2_EAC_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_10x10_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGBA_BPTC_Format, RGB_BPTC_SIGNED_Format, RGB_BPTC_UNSIGNED_Format, RED_RGTC1_Format, SIGNED_RED_RGTC1_Format, RED_GREEN_RGTC2_Format, SIGNED_RED_GREEN_RGTC2_Format, UnsignedByteType, ByteType, UnsignedShortType, ShortType, HalfFloatType, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedIntType, IntType, FloatType, UnsignedInt5999Type } from '../constants.js';\r\n\r\nfunction contain( texture, aspect ) {\r\n\r\n\tconst imageAspect = ( texture.image && texture.image.width ) ? texture.image.width / texture.image.height : 1;\r\n\r\n\tif ( imageAspect > aspect ) {\r\n\r\n\t\ttexture.repeat.x = 1;\r\n\t\ttexture.repeat.y = imageAspect / aspect;\r\n\r\n\t\ttexture.offset.x = 0;\r\n\t\ttexture.offset.y = ( 1 - texture.repeat.y ) / 2;\r\n\r\n\t} else {\r\n\r\n\t\ttexture.repeat.x = aspect / imageAspect;\r\n\t\ttexture.repeat.y = 1;\r\n\r\n\t\ttexture.offset.x = ( 1 - texture.repeat.x ) / 2;\r\n\t\ttexture.offset.y = 0;\r\n\r\n\t}\r\n\r\n\treturn texture;\r\n\r\n}\r\n\r\nfunction cover( texture, aspect ) {\r\n\r\n\tconst imageAspect = ( texture.image && texture.image.width ) ? texture.image.width / texture.image.height : 1;\r\n\r\n\tif ( imageAspect > aspect ) {\r\n\r\n\t\ttexture.repeat.x = aspect / imageAspect;\r\n\t\ttexture.repeat.y = 1;\r\n\r\n\t\ttexture.offset.x = ( 1 - texture.repeat.x ) / 2;\r\n\t\ttexture.offset.y = 0;\r\n\r\n\t} else {\r\n\r\n\t\ttexture.repeat.x = 1;\r\n\t\ttexture.repeat.y = imageAspect / aspect;\r\n\r\n\t\ttexture.offset.x = 0;\r\n\t\ttexture.offset.y = ( 1 - texture.repeat.y ) / 2;\r\n\r\n\t}\r\n\r\n\treturn texture;\r\n\r\n}\r\n\r\nfunction fill( texture ) {\r\n\r\n\ttexture.repeat.x = 1;\r\n\ttexture.repeat.y = 1;\r\n\r\n\ttexture.offset.x = 0;\r\n\ttexture.offset.y = 0;\r\n\r\n\treturn texture;\r\n\r\n}\r\n\r\n\r\n\r\n/**\r\n * Given the width, height, format, and type of a texture. Determines how many\r\n * bytes must be used to represent the texture.\r\n */\r\nfunction getByteLength( width, height, format, type ) {\r\n\r\n\tconst typeByteLength = getTextureTypeByteLength( type );\r\n\r\n\tswitch ( format ) {\r\n\r\n\t\t// https://registry.khronos.org/OpenGL-Refpages/es3.0/html/glTexImage2D.xhtml\r\n\t\tcase AlphaFormat:\r\n\t\t\treturn width * height;\r\n\t\tcase LuminanceFormat:\r\n\t\t\treturn width * height;\r\n\t\tcase LuminanceAlphaFormat:\r\n\t\t\treturn width * height * 2;\r\n\t\tcase RedFormat:\r\n\t\t\treturn ( ( width * height ) / typeByteLength.components ) * typeByteLength.byteLength;\r\n\t\tcase RedIntegerFormat:\r\n\t\t\treturn ( ( width * height ) / typeByteLength.components ) * typeByteLength.byteLength;\r\n\t\tcase RGFormat:\r\n\t\t\treturn ( ( width * height * 2 ) / typeByteLength.components ) * typeByteLength.byteLength;\r\n\t\tcase RGIntegerFormat:\r\n\t\t\treturn ( ( width * height * 2 ) / typeByteLength.components ) * typeByteLength.byteLength;\r\n\t\tcase RGBFormat:\r\n\t\t\treturn ( ( width * height * 3 ) / typeByteLength.components ) * typeByteLength.byteLength;\r\n\t\tcase RGBAFormat:\r\n\t\t\treturn ( ( width * height * 4 ) / typeByteLength.components ) * typeByteLength.byteLength;\r\n\t\tcase RGBAIntegerFormat:\r\n\t\t\treturn ( ( width * height * 4 ) / typeByteLength.components ) * typeByteLength.byteLength;\r\n\r\n\t\t// https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_s3tc_srgb/\r\n\t\tcase RGB_S3TC_DXT1_Format:\r\n\t\tcase RGBA_S3TC_DXT1_Format:\r\n\t\t\treturn Math.floor( ( width + 3 ) / 4 ) * Math.floor( ( height + 3 ) / 4 ) * 8;\r\n\t\tcase RGBA_S3TC_DXT3_Format:\r\n\t\tcase RGBA_S3TC_DXT5_Format:\r\n\t\t\treturn Math.floor( ( width + 3 ) / 4 ) * Math.floor( ( height + 3 ) / 4 ) * 16;\r\n\r\n\t\t// https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_pvrtc/\r\n\t\tcase RGB_PVRTC_2BPPV1_Format:\r\n\t\tcase RGBA_PVRTC_2BPPV1_Format:\r\n\t\t\treturn ( Math.max( width, 16 ) * Math.max( height, 8 ) ) / 4;\r\n\t\tcase RGB_PVRTC_4BPPV1_Format:\r\n\t\tcase RGBA_PVRTC_4BPPV1_Format:\r\n\t\t\treturn ( Math.max( width, 8 ) * Math.max( height, 8 ) ) / 2;\r\n\r\n\t\t// https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_etc/\r\n\t\tcase RGB_ETC1_Format:\r\n\t\tcase RGB_ETC2_Format:\r\n\t\t\treturn Math.floor( ( width + 3 ) / 4 ) * Math.floor( ( height + 3 ) / 4 ) * 8;\r\n\t\tcase RGBA_ETC2_EAC_Format:\r\n\t\t\treturn Math.floor( ( width + 3 ) / 4 ) * Math.floor( ( height + 3 ) / 4 ) * 16;\r\n\r\n\t\t// https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_astc/\r\n\t\tcase RGBA_ASTC_4x4_Format:\r\n\t\t\treturn Math.floor( ( width + 3 ) / 4 ) * Math.floor( ( height + 3 ) / 4 ) * 16;\r\n\t\tcase RGBA_ASTC_5x4_Format:\r\n\t\t\treturn Math.floor( ( width + 4 ) / 5 ) * Math.floor( ( height + 3 ) / 4 ) * 16;\r\n\t\tcase RGBA_ASTC_5x5_Format:\r\n\t\t\treturn Math.floor( ( width + 4 ) / 5 ) * Math.floor( ( height + 4 ) / 5 ) * 16;\r\n\t\tcase RGBA_ASTC_6x5_Format:\r\n\t\t\treturn Math.floor( ( width + 5 ) / 6 ) * Math.floor( ( height + 4 ) / 5 ) * 16;\r\n\t\tcase RGBA_ASTC_6x6_Format:\r\n\t\t\treturn Math.floor( ( width + 5 ) / 6 ) * Math.floor( ( height + 5 ) / 6 ) * 16;\r\n\t\tcase RGBA_ASTC_8x5_Format:\r\n\t\t\treturn Math.floor( ( width + 7 ) / 8 ) * Math.floor( ( height + 4 ) / 5 ) * 16;\r\n\t\tcase RGBA_ASTC_8x6_Format:\r\n\t\t\treturn Math.floor( ( width + 7 ) / 8 ) * Math.floor( ( height + 5 ) / 6 ) * 16;\r\n\t\tcase RGBA_ASTC_8x8_Format:\r\n\t\t\treturn Math.floor( ( width + 7 ) / 8 ) * Math.floor( ( height + 7 ) / 8 ) * 16;\r\n\t\tcase RGBA_ASTC_10x5_Format:\r\n\t\t\treturn Math.floor( ( width + 9 ) / 10 ) * Math.floor( ( height + 4 ) / 5 ) * 16;\r\n\t\tcase RGBA_ASTC_10x6_Format:\r\n\t\t\treturn Math.floor( ( width + 9 ) / 10 ) * Math.floor( ( height + 5 ) / 6 ) * 16;\r\n\t\tcase RGBA_ASTC_10x8_Format:\r\n\t\t\treturn Math.floor( ( width + 9 ) / 10 ) * Math.floor( ( height + 7 ) / 8 ) * 16;\r\n\t\tcase RGBA_ASTC_10x10_Format:\r\n\t\t\treturn Math.floor( ( width + 9 ) / 10 ) * Math.floor( ( height + 9 ) / 10 ) * 16;\r\n\t\tcase RGBA_ASTC_12x10_Format:\r\n\t\t\treturn Math.floor( ( width + 11 ) / 12 ) * Math.floor( ( height + 9 ) / 10 ) * 16;\r\n\t\tcase RGBA_ASTC_12x12_Format:\r\n\t\t\treturn Math.floor( ( width + 11 ) / 12 ) * Math.floor( ( height + 11 ) / 12 ) * 16;\r\n\r\n\t\t// https://registry.khronos.org/webgl/extensions/EXT_texture_compression_bptc/\r\n\t\tcase RGBA_BPTC_Format:\r\n\t\tcase RGB_BPTC_SIGNED_Format:\r\n\t\tcase RGB_BPTC_UNSIGNED_Format:\r\n\t\t\treturn Math.ceil( width / 4 ) * Math.ceil( height / 4 ) * 16;\r\n\r\n\t\t// https://registry.khronos.org/webgl/extensions/EXT_texture_compression_rgtc/\r\n\t\tcase RED_RGTC1_Format:\r\n\t\tcase SIGNED_RED_RGTC1_Format:\r\n\t\t\treturn Math.ceil( width / 4 ) * Math.ceil( height / 4 ) * 8;\r\n\t\tcase RED_GREEN_RGTC2_Format:\r\n\t\tcase SIGNED_RED_GREEN_RGTC2_Format:\r\n\t\t\treturn Math.ceil( width / 4 ) * Math.ceil( height / 4 ) * 16;\r\n\r\n\t}\r\n\r\n\tthrow new Error(\r\n\t\t`Unable to determine texture byte length for ${format} format.`,\r\n\t);\r\n\r\n}\r\n\r\nfunction getTextureTypeByteLength( type ) {\r\n\r\n\tswitch ( type ) {\r\n\r\n\t\tcase UnsignedByteType:\r\n\t\tcase ByteType:\r\n\t\t\treturn { byteLength: 1, components: 1 };\r\n\t\tcase UnsignedShortType:\r\n\t\tcase ShortType:\r\n\t\tcase HalfFloatType:\r\n\t\t\treturn { byteLength: 2, components: 1 };\r\n\t\tcase UnsignedShort4444Type:\r\n\t\tcase UnsignedShort5551Type:\r\n\t\t\treturn { byteLength: 2, components: 4 };\r\n\t\tcase UnsignedIntType:\r\n\t\tcase IntType:\r\n\t\tcase FloatType:\r\n\t\t\treturn { byteLength: 4, components: 1 };\r\n\t\tcase UnsignedInt5999Type:\r\n\t\t\treturn { byteLength: 4, components: 3 };\r\n\r\n\t}\r\n\r\n\tthrow new Error( `Unknown texture type ${type}.` );\r\n\r\n}\r\n\r\nconst TextureUtils = {\r\n\tcontain,\r\n\tcover,\r\n\tfill,\r\n\tgetByteLength\r\n};\r\n\r\nexport { contain, cover, fill, getByteLength, TextureUtils };\r\n"],
  "mappings": "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",
  "names": []
}
